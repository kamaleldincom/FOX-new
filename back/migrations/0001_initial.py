# Generated by Django 3.2.7 on 2021-10-05 03:09

import back.models.company
import back.models.contractor
import back.models.document
import back.models.permit
import back.models.template
import back.models.worker
import back.models.worker_special_competency
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='FoxUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('CliMan', 'Client Manager'), ('CliAdm', 'Client Admin'), ('Contr', 'Contractor'), ('Dum', 'Dummy')], default='Dum', max_length=16)),
                ('name', models.CharField(default='BarFoo', max_length=128)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('is_new', models.BooleanField(default=False, verbose_name='new')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('safety_video_url', models.URLField(blank=True, default='https://www.youtube.com/embed/ORUJ6gWBhrY', null=True)),
                ('personal_declaration_template', models.FileField(blank=True, null=True, upload_to=back.models.company.company_docs_path)),
                ('safety_quiz_template', models.FileField(blank=True, null=True, upload_to=back.models.company.company_docs_path)),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='DocumentWorkerAssign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(default='Empty message')),
                ('forward_link', models.URLField(default='https://www.google.com/')),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(null=True)),
            ],
            options={
                'verbose_name_plural': 'Modules',
            },
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('phone_number', models.CharField(max_length=64, null=True)),
                ('birthday', models.DateField()),
                ('card_number_id', models.CharField(blank=True, max_length=64, null=True)),
                ('card_number_id_scan', models.FileField(blank=True, null=True, upload_to=back.models.worker.project_docs_path)),
                ('license_number', models.CharField(max_length=64)),
                ('license_scan', models.FileField(blank=True, null=True, upload_to=back.models.worker.project_docs_path)),
                ('passport', models.CharField(blank=True, max_length=64, null=True)),
                ('passport_scan', models.FileField(blank=True, null=True, upload_to=back.models.worker.project_docs_path)),
                ('safety_green_card', models.CharField(max_length=64)),
                ('safety_green_card_scan', models.FileField(blank=True, null=True, upload_to=back.models.worker.project_docs_path)),
                ('position_in_company', models.CharField(choices=[('Weld', 'Welder'), ('Fit', 'Fitter'), ('Help', 'Helper'), ('Rig', 'Rigger'), ('SafeOff', 'Safety Officer'), ('Plumb', 'Plumber'), ('Tech', 'Technician'), ('Electr', 'Electrician'), ('FlrInst', 'Flooring Installer'), ('HVACInst', 'HVAC Installer'), ('InsInst', 'Insulation Installer'), ('Surv', 'Surveyor'), ('BrcMans', 'Brick Manson'), ('Roof', 'Roofer'), ('SiteSuper', 'Site Supervisor'), ('Other', 'Other')], default='Other', max_length=16)),
                ('trade_competency', models.CharField(choices=[('Civ', 'Civil'), ('Electr', 'Electrical'), ('Mech', 'Mechanical'), ('Infra', 'Infra'), ('Gen', 'General'), ('Safe', 'Safety'), ('Secur', 'Security')], default='Gen', max_length=16)),
                ('safety_quiz_answer', models.FileField(blank=True, null=True, upload_to=back.models.worker.project_docs_path)),
                ('personal_declaration', models.FileField(blank=True, null=True, upload_to=back.models.worker.project_docs_path)),
                ('deleted', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Worker',
            },
        ),
        migrations.CreateModel(
            name='ClientAdmin',
            fields=[
                ('foxuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='back.foxuser')),
            ],
            options={
                'verbose_name': 'Client Administrator',
            },
            bases=('back.foxuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ClientManager',
            fields=[
                ('foxuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='back.foxuser')),
                ('department', models.CharField(max_length=128, null=True)),
                ('position', models.CharField(choices=[('SafeMan', 'Safety Manager'), ('SecMan', 'Security Manager'), ('SecOff', 'Security Officer'), ('SiteOwn', 'Site Owner'), ('WorkOwn', 'Owner of Work'), ('SecGrd', 'Security Guards')], default='SiteOwn', max_length=10)),
            ],
            options={
                'verbose_name': 'Client Manager',
            },
            bases=('back.foxuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Contractor',
            fields=[
                ('foxuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='back.foxuser')),
                ('contractor_type', models.CharField(choices=[('Default', 'Contractor')], default='Default', max_length=10)),
                ('related_company', models.CharField(max_length=128, null=True)),
                ('company_phone', models.CharField(max_length=64, null=True)),
                ('signature', models.ImageField(blank=True, null=True, upload_to=back.models.contractor.signature_img_path)),
                ('companies', models.ManyToManyField(blank=True, related_name='contractors', to='back.Company')),
            ],
            options={
                'verbose_name': 'Contractor',
            },
            bases=('back.foxuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='WorkerSpecialCompetency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, null=True)),
                ('issued_by', models.CharField(max_length=64, null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to=back.models.worker_special_competency.project_docs_path)),
                ('deleted', models.BooleanField(default=False)),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='special_competencies', to='back.worker')),
            ],
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('hazardous_work', models.CharField(choices=[('None', 'None'), ('Work_At_Height', 'Work At Height'), ('Lifting_Work', 'Lifting Work'), ('Confined_Space', 'Confined Space'), ('Hot_Work', 'Hot Work'), ('Chemical_Handling', 'Chemical Handling'), ('Work_Alone', 'Work Alone'), ('Work_At_Sensitive_Area', 'Work At Sensitive Area'), ('Cold_Work', 'Cold Work')], default='None', max_length=25)),
                ('file', models.FileField(upload_to=back.models.template.project_docs_path)),
                ('deleted', models.BooleanField(default=False)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='templates', to='back.company')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField()),
                ('location', models.CharField(default='Whole facility', max_length=255)),
                ('creation_date', models.DateTimeField(blank=True, default=django.utils.timezone.localtime, null=True)),
                ('submit_date', models.DateTimeField(blank=True, null=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(null=True)),
                ('extend_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Created', 'Created'), ('Submitted', 'Submitted'), ('Approved', 'Approved'), ('Rejected', 'Rejected'), ('Started', 'Started'), ('Completed', 'Completed'), ('Extended', 'Extended'), ('Closed', 'Closed')], default='Created', max_length=16)),
                ('work_at_height', models.BooleanField(default=False)),
                ('lifting_work', models.BooleanField(default=False)),
                ('confined_space', models.BooleanField(default=False)),
                ('hot_work', models.BooleanField(default=False)),
                ('chemical_handling', models.BooleanField(default=False)),
                ('work_alone', models.BooleanField(default=False)),
                ('work_at_sensitive_area', models.BooleanField(default=False)),
                ('cold_work', models.BooleanField(default=False)),
                ('applicant_name', models.CharField(blank=True, max_length=64, null=True)),
                ('applicant_phone', models.CharField(blank=True, max_length=32, null=True)),
                ('deleted', models.BooleanField(default=False)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='back.company')),
                ('responsible_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects_to_manage', to='back.worker')),
                ('workers', models.ManyToManyField(blank=True, related_name='projects', to='back.Worker')),
                ('contractor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects', to='back.contractor')),
            ],
            options={
                'verbose_name': 'Project',
            },
        ),
        migrations.CreateModel(
            name='Permit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_date', models.DateField(auto_now_add=True)),
                ('active', models.BooleanField(default=True)),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to=back.models.permit.project_qr_code_path)),
                ('deleted', models.BooleanField(default=False)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permits', to='back.project')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permits', to='back.worker')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emitted', models.DateTimeField(default=django.utils.timezone.localtime)),
                ('unread', models.BooleanField(default=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='back.message')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ModulePermission',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='back.company')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='back.module')),
            ],
            options={
                'verbose_name_plural': 'ModulePermissions',
            },
        ),
        migrations.AddField(
            model_name='message',
            name='receivers',
            field=models.ManyToManyField(related_name='messages', through='back.Notification', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to=back.models.document.project_docs_path)),
                ('filled_file', models.FileField(blank=True, null=True, upload_to=back.models.document.project_filled_files_path)),
                ('hazardous_work', models.CharField(choices=[('None', 'None'), ('Work_At_Height', 'Work At Height'), ('Lifting_Work', 'Lifting Work'), ('Confined_Space', 'Confined Space'), ('Hot_Work', 'Hot Work'), ('Chemical_Handling', 'Chemical Handling'), ('Work_Alone', 'Work Alone'), ('Work_At_Sensitive_Area', 'Work At Sensitive Area'), ('Cold_Work', 'Cold Work')], default='None', max_length=25)),
                ('deleted', models.BooleanField(default=False)),
                ('url_to_doc', models.URLField(blank=True, null=True)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='back.project')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='templates', to='back.template')),
            ],
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(null=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.localtime)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activities', to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activities', to='back.company')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activities', to='back.project')),
            ],
        ),
        migrations.AddField(
            model_name='foxuser',
            name='company',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fox_users', to='back.company'),
        ),
        migrations.AddField(
            model_name='foxuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='foxuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='worker',
            name='contractor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workers', to='back.contractor'),
        ),
        migrations.CreateModel(
            name='DocumentAssign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_date', models.DateField(auto_now_add=True)),
                ('change_date', models.DateField(auto_now=True)),
                ('approve', models.BooleanField(null=True)),
                ('last_approve_date', models.DateField()),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='back.document')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='back.clientmanager')),
            ],
            options={
                'verbose_name_plural': 'Document Assignments',
            },
        ),
        migrations.CreateModel(
            name='Approval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_resolved', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected'), ('Deprecated', 'Deprecated')], default='Pending', max_length=16)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approvals', to='back.project')),
                ('manager', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='approvals', to='back.clientmanager')),
            ],
            options={
                'verbose_name': 'Approval',
            },
        ),
    ]
